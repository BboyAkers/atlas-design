@use 'sass:map';

$button-color: $text !default;
$button-background-color: $body-background !default;

$button-large-font-size: $font-size-6 !default;
$button-small-font-size: $font-size-8 !default;

$button-border-color: $text-subtle !default;
$button-border-width: $control-border-width !default;
$button-border-radius: $radius-small;

$button-padding-vertical: calc(0.375em - #{$button-border-width}) !default;
$button-padding-horizontal: 0.75em !default;

$button-extra-small-padding-vertical: calc(0.375em - #{$button-border-width}) !default;
$button-extra-small-padding-horizontal: 1em !default;

$button-hover-color: $text !default;
$button-hover-border-color: $default-hover !default;
$button-hover-background-color: $default-hover-invert !default;

$button-focus-color: $text !default;
$button-focus-border-color: $primary !default;

$button-active-color: $text !default;
$button-active-border-color: $text !default;

$button-text-color: $text !default;
$button-text-hover-background-color: $body-background-medium !default;
$button-text-hover-color: $text !default;
$button-text-active-background-color: $body-background-medium !default;

$button-disabled-background-color: $body-background-medium !default;
$button-disabled-shadow: none !default;
$button-disabled-opacity: 0.5 !default;

$button-icon-spacing: 0.375em !default;
$button-font-weight: $weight-semibold !default;

@mixin button-small {
	font-size: $button-small-font-size;
}

@mixin button-large {
	font-size: $button-large-font-size;
}

@if $features-button {
	.button {
		@include control;
		@include unselectable;

		justify-content: center;
		padding-top: $button-padding-vertical;
		padding-#{$user-left}: $button-padding-horizontal;
		padding-#{$user-right}: $button-padding-horizontal;
		padding-bottom: $button-padding-vertical;
		border-width: $button-border-width;
		border-radius: $button-border-radius;
		border-color: $button-border-color;
		background-color: $body-background;
		color: $button-color;
		font-weight: $button-font-weight;
		text-align: center;
		white-space: nowrap;
		cursor: pointer;

		strong {
			color: inherit;
		}

		.icon {
			&:only-child {
				margin: 0;
			}

			&:first-child:not(:only-child) {
				margin-#{$user-right}: $button-icon-spacing;
			}

			&:last-child:not(:only-child) {
				margin-#{$user-left}: $button-icon-spacing;
			}
		}

		// States

		&:hover,
		&.is-hovered {
			border-color: $button-hover-border-color;
			background-color: $button-hover-background-color;
			color: $button-hover-color;
		}

		&.focus-visible,
		&.is-focused {
			border-color: $button-focus-border-color;
			color: $button-focus-color;
		}

		&:visited {
			color: $button-color;
		}

		&:active,
		&.is-active {
			border-color: $button-active-border-color;
			color: $button-active-color;
		}

		// Sizes

		&.button-small {
			@include button-small;
		}

		&.button-large {
			@include button-large;
		}

		// Modifiers

		&.button-disabled,
		&[disabled] {
			border-color: currentColor;
			background-color: $button-disabled-background-color;
			opacity: $button-disabled-opacity;
			box-shadow: $button-disabled-shadow;
		}

		&.button-full-width {
			display: flex;
			width: 100%;
		}

		&.button-loading {
			color: transparent !important;
			pointer-events: none;

			&::after {
				@include loader;
				@include center(1em);

				position: absolute !important;
				border-bottom-color: $text;
				border-left-color: $text;
			}
		}

		@each $name, $color-set in $colors {
			$base: nth($color-set, $color-index-base);
			$dark: nth($color-set, $color-index-dark);
			$hover: nth($color-set, $color-index-hover);
			$active: nth($color-set, $color-index-active);
			$invert: nth($color-set, $color-index-invert);
			$background: nth($color-set, $color-index-background);

			&.button-#{$name} {
				@if $name == 'warning' {
					border-color: $dark;
					color: $dark;
				} @else {
					border-color: $base;
					color: $base;
				}

				&:hover,
				&.is-hovered,
				&.focus-visible,
				&.is-focused {
					background-color: $background;
				}
			}
		}
	}
}

.button.button-clear {
	border-color: transparent;
	background-color: transparent;
	color: currentColor;

	&.button-bordered {
		border-color: currentColor;
	}

	&.is-hovered,
	&:hover,
	&:active {
		background-color: $body-background-medium;
	}

	&:visited {
		color: currentColor;
	}

	@each $name, $color-set in $colors {
		$base: nth($color-set, $color-index-base);
		$dark: nth($color-set, $color-index-dark);
		$hover: nth($color-set, $color-index-hover);
		$active: nth($color-set, $color-index-active);
		$invert: nth($color-set, $color-index-invert);
		$background: nth($color-set, $color-index-background);

		&.button-#{$name} {
			@if $name == 'warning' {
				color: $dark !important;
			} @else {
				color: $base;
			}

			&:hover,
			&.is-hovered,
			&.focus-visible {
				background-color: $background;
				color: $base;
			}

			&.button-loading::after {
				@include loader;

				border-color: transparent transparent $base $base !important;
			}

			&.button-disabled,
			&[disabled] {
				background-color: transparent;
				color: $base;
				box-shadow: none;
			}
		}
	}
}

.button.button-filled {
	border-color: $alternate-background-medium;
	background-color: $alternate-background-medium;
	color: $text-invert;

	&:hover,
	&.is-hovered,
	&.focus-visible,
	&:active {
		background-color: $alternate-background;
	}

	@each $name, $color-set in $colors {
		$base: nth($color-set, $color-index-base);
		$dark: nth($color-set, $color-index-dark);
		$hover: nth($color-set, $color-index-hover);
		$active: nth($color-set, $color-index-active);
		$invert: nth($color-set, $color-index-invert);
		$background: nth($color-set, $color-index-background);

		&.button-#{$name} {
			border-color: $base;
			background-color: $base;
			color: $invert;

			&:hover,
			&.focus-visible,
			&:active {
				border-color: $hover;
				background-color: $hover;
				color: $invert;
			}

			&.button-loading::after {
				@include loader;

				border-color: transparent transparent $base $base !important;
			}

			&.button-disabled,
			&[disabled] {
				border-color: $base;
				background-color: transparent;
				color: $base;
				box-shadow: none;
			}
		}
	}
}
