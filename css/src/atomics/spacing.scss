$separator: '-' !default;
$spacing-properties: 'margin', 'margin-inline', 'margin-block', 'margin-top', 'margin-bottom',
	'margin-left', 'margin-right', 'padding', 'padding-inline', 'padding-block', 'padding-top',
	'padding-bottom', 'padding-left', 'padding-right' !default;

$layout-sizes: (
	('xxs', $layout-1),
	('xs', $layout-2),
	('sm', $layout-3),
	('md', $layout-4),
	('lg', $layout-5),
	('xl', $layout-6),
	('xxl', $layout-7),
	('xxxl', $layout-8),
	('none', $layout-0)
);

@function sizeValue($key, $value) {
	@return if($key == 'none', 0, $value);
}

// Pattern: <cssproperty>-<value>-<screen>

@each $property in $spacing-properties {
	@each $size in $layout-sizes {
		$sizeKey: nth($size, 1);
		$sizeValue: nth($size, 2);

		// .<property>-<value>
		.#{$property}#{$separator}#{$sizeKey} {
			#{$property}: sizeValue($sizeKey, $sizeValue) !important;
		}
	}
}

@include tablet {
	@each $property in $spacing-properties {
		@each $size in $layout-sizes {
			$sizeKey: nth($size, 1);
			$sizeValue: nth($size, 2);

			.#{$property}#{$separator}#{$sizeKey}#{$separator}tablet {
				#{$property}: $sizeValue !important;
			}
		}
	}
}

@include desktop {
	@each $property in $spacing-properties {
		@each $size in $layout-sizes {
			$sizeKey: nth($size, 1);
			$sizeValue: nth($size, 2);

			.#{$property}#{$separator}#{$sizeKey}#{$separator}desktop {
				#{$property}: $sizeValue !important;
			}
		}
	}
}

@include widescreen {
	@each $property in $spacing-properties {
		@each $size in $layout-sizes {
			$sizeKey: nth($size, 1);
			$sizeValue: nth($size, 2);

			.#{$property}#{$separator}#{$sizeKey}#{$separator}widescreen {
				#{$property}: $sizeValue !important;
			}
		}
	}
}
