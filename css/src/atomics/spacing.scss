$marginKey: 'margin';
$paddingKey: 'padding';
$separator: '-';
$inlineKey: 'inline';
$blockKey: 'block';

$layout-sizes: (
	('xs', $layout-1),
	('s', $layout-2),
	('m', $layout-3),
	('l', $layout-4),
	('xl', $layout-5),
	('xxl', $layout-6),
	('xxxl', $layout-7),
	('none', $layout-0)
);

@function sizeValue($key, $value) {
	@return if($key == 'none', 0, $value);
}

// Pattern: <cssproperty>-<value>-<screen>

@each $size in $layout-sizes {
	$sizeKey: nth($size, 1);
	$sizeValue: nth($size, 2);

	// .margin-<value>
	.#{$marginKey}#{$separator}#{$sizeKey} {
		margin: sizeValue($sizeKey, $sizeValue) !important;
	}

	// .padding-<value>
	.#{$paddingKey}#{$separator}#{$sizeKey} {
		padding: sizeValue($sizeKey, $sizeValue) !important;
	}
}

@each $position-key, $direction in $directions {
	@each $size in $layout-sizes {
		$sizeKey: nth($size, 1);
		$sizeValue: nth($size, 2);

		// .margin-<side>-<value>
		.#{$marginKey}#{$separator}#{$position-key}#{$separator}#{$sizeKey} {
			margin-#{$direction}: sizeValue($sizeKey, $sizeValue) !important;
		}

		// .padding-<side>-<value>
		.#{$paddingKey}#{$separator}#{$position-key}#{$separator}#{$sizeKey} {
			padding-#{$direction}: sizeValue($sizeKey, $sizeValue) !important;
		}
	}
}

@each $size in $layout-sizes {
	$sizeKey: nth($size, 1);
	$sizeValue: nth($size, 2);

	// margin/padding-inline property isn't supported by IE, Edge, and Safari yet (as of Apr 2021)

	// .margin-inline-<value>
	.#{$marginKey}#{$separator}#{$inlineKey}#{$separator}#{$sizeKey} {
		// Replace with margin-inline property when possible
		margin-right: sizeValue($sizeKey, $sizeValue) !important;
		margin-left: sizeValue($sizeKey, $sizeValue) !important;
	}

	// .padding-inline-<value>
	.#{$paddingKey}#{$separator}#{$inlineKey}#{$separator}#{$sizeKey} {
		// Replace with padding-inline property when possible
		padding-right: sizeValue($sizeKey, $sizeValue) !important;
		padding-left: sizeValue($sizeKey, $sizeValue) !important;
	}

	// margin/padding-block property isn't supported by IE, Edge, and Safari yet (as of Apr 2021)

	// .margin-block-<value>
	.#{$marginKey}#{$separator}#{$blockKey}#{$separator}#{$sizeKey} {
		// Replace with margin-block property when possible
		margin-top: sizeValue($sizeKey, $sizeValue) !important;
		margin-bottom: sizeValue($sizeKey, $sizeValue) !important;
	}

	// .padding-block-<value>
	.#{$paddingKey}#{$separator}#{$blockKey}#{$separator}#{$sizeKey} {
		// Replace with padding-block property when possible
		padding-top: sizeValue($sizeKey, $sizeValue) !important;
		padding-bottom: sizeValue($sizeKey, $sizeValue) !important;
	}
}

@include tablet {
	@each $size in $layout-sizes {
		$sizeKey: nth($size, 1);
		$sizeValue: nth($size, 2);

		.#{$marginKey}#{$separator}#{$sizeKey}#{$separator}tablet {
			margin: sizeValue($sizeKey, $sizeValue) !important;
		}

		.#{$paddingKey}#{$separator}#{$sizeKey}#{$separator}tablet {
			padding: sizeValue($sizeKey, $sizeValue) !important;
		}
	}

	@each $position-key, $direction in $directions {
		@each $size in $layout-sizes {
			$sizeKey: nth($size, 1);
			$sizeValue: nth($size, 2);

			.#{$marginKey}#{$separator}#{$position-key}#{$separator}#{$sizeKey}#{$separator}tablet {
				margin-#{$direction}: sizeValue($sizeKey, $sizeValue) !important;
			}

			.#{$paddingKey}#{$separator}#{$position-key}#{$separator}#{$sizeKey}#{$separator}tablet {
				padding-#{$direction}: sizeValue($sizeKey, $sizeValue) !important;
			}
		}
	}

	@each $size in $layout-sizes {
		$sizeKey: nth($size, 1);
		$sizeValue: nth($size, 2);

		.#{$marginKey}#{$separator}#{$inlineKey}#{$separator}#{$sizeKey}#{$separator}tablet {
			// Replace with margin-inline property when possible
			margin-right: sizeValue($sizeKey, $sizeValue) !important;
			margin-left: sizeValue($sizeKey, $sizeValue) !important;
		}

		.#{$paddingKey}#{$separator}#{$inlineKey}#{$separator}#{$sizeKey}#{$separator}tablet {
			// Replace with padding-inline property when possible
			padding-right: sizeValue($sizeKey, $sizeValue) !important;
			padding-left: sizeValue($sizeKey, $sizeValue) !important;
		}

		.#{$marginKey}#{$separator}#{$blockKey}#{$separator}#{$sizeKey}#{$separator}tablet {
			// Replace with margin-block property when possible
			margin-top: sizeValue($sizeKey, $sizeValue) !important;
			margin-bottom: sizeValue($sizeKey, $sizeValue) !important;
		}

		.#{$paddingKey}#{$separator}#{$blockKey}#{$separator}#{$sizeKey}#{$separator}tablet {
			// Replace with padding-block property when possible
			padding-top: sizeValue($sizeKey, $sizeValue) !important;
			padding-bottom: sizeValue($sizeKey, $sizeValue) !important;
		}
	}
}

@include desktop {
	@each $size in $layout-sizes {
		$sizeKey: nth($size, 1);
		$sizeValue: nth($size, 2);

		.#{$marginKey}#{$separator}#{$sizeKey}#{$separator}desktop {
			margin: sizeValue($sizeKey, $sizeValue) !important;
		}

		.#{$paddingKey}#{$separator}#{$sizeKey}#{$separator}desktop {
			padding: sizeValue($sizeKey, $sizeValue) !important;
		}
	}

	@each $position-key, $direction in $directions {
		@each $size in $layout-sizes {
			$sizeKey: nth($size, 1);
			$sizeValue: nth($size, 2);

			.#{$marginKey}#{$separator}#{$position-key}#{$separator}#{$sizeKey}#{$separator}desktop {
				margin-#{$direction}: sizeValue($sizeKey, $sizeValue) !important;
			}

			.#{$paddingKey}#{$separator}#{$position-key}#{$separator}#{$sizeKey}#{$separator}desktop {
				padding-#{$direction}: sizeValue($sizeKey, $sizeValue) !important;
			}
		}
	}

	@each $size in $layout-sizes {
		$sizeKey: nth($size, 1);
		$sizeValue: nth($size, 2);

		.#{$marginKey}#{$separator}#{$inlineKey}#{$separator}#{$sizeKey}#{$separator}desktop {
			// Replace with margin-inline property when possible
			margin-right: sizeValue($sizeKey, $sizeValue) !important;
			margin-left: sizeValue($sizeKey, $sizeValue) !important;
		}

		.#{$paddingKey}#{$separator}#{$inlineKey}#{$separator}#{$sizeKey}#{$separator}desktop {
			// Replace with padding-inline property when possible
			padding-right: sizeValue($sizeKey, $sizeValue) !important;
			padding-left: sizeValue($sizeKey, $sizeValue) !important;
		}

		.#{$marginKey}#{$separator}#{$blockKey}#{$separator}#{$sizeKey}#{$separator}desktop {
			// Replace with margin-block property when possible
			margin-top: sizeValue($sizeKey, $sizeValue) !important;
			margin-bottom: sizeValue($sizeKey, $sizeValue) !important;
		}

		.#{$paddingKey}#{$separator}#{$blockKey}#{$separator}#{$sizeKey}#{$separator}desktop {
			// Replace with padding-block property when possible
			padding-top: sizeValue($sizeKey, $sizeValue) !important;
			padding-bottom: sizeValue($sizeKey, $sizeValue) !important;
		}
	}
}

@include widescreen {
	@each $size in $layout-sizes {
		$sizeKey: nth($size, 1);
		$sizeValue: nth($size, 2);

		.#{$marginKey}#{$separator}#{$sizeKey}#{$separator}widescreen {
			margin: sizeValue($sizeKey, $sizeValue) !important;
		}

		.#{$paddingKey}#{$separator}#{$sizeKey}#{$separator}widescreen {
			padding: sizeValue($sizeKey, $sizeValue) !important;
		}
	}

	@each $position-key, $direction in $directions {
		@each $size in $layout-sizes {
			$sizeKey: nth($size, 1);
			$sizeValue: nth($size, 2);

			.#{$marginKey}#{$separator}#{$position-key}#{$separator}#{$sizeKey}#{$separator}widescreen {
				margin-#{$direction}: sizeValue($sizeKey, $sizeValue) !important;
			}

			.#{$paddingKey}#{$separator}#{$position-key}#{$separator}#{$sizeKey}#{$separator}widescreen {
				padding-#{$direction}: sizeValue($sizeKey, $sizeValue) !important;
			}
		}
	}

	@each $size in $layout-sizes {
		$sizeKey: nth($size, 1);
		$sizeValue: nth($size, 2);

		.#{$marginKey}#{$separator}#{$inlineKey}#{$separator}#{$sizeKey}#{$separator}widescreen {
			// Replace with margin-inline property when possible
			margin-right: sizeValue($sizeKey, $sizeValue) !important;
			margin-left: sizeValue($sizeKey, $sizeValue) !important;
		}

		.#{$paddingKey}#{$separator}#{$inlineKey}#{$separator}#{$sizeKey}#{$separator}widescreen {
			// Replace with padding-inline property when possible
			padding-right: sizeValue($sizeKey, $sizeValue) !important;
			padding-left: sizeValue($sizeKey, $sizeValue) !important;
		}

		.#{$marginKey}#{$separator}#{$blockKey}#{$separator}#{$sizeKey}#{$separator}widescreen {
			// Replace with margin-block property when possible
			margin-top: sizeValue($sizeKey, $sizeValue) !important;
			margin-bottom: sizeValue($sizeKey, $sizeValue) !important;
		}

		.#{$paddingKey}#{$separator}#{$blockKey}#{$separator}#{$sizeKey}#{$separator}widescreen {
			// Replace with padding-block property when possible
			padding-top: sizeValue($sizeKey, $sizeValue) !important;
			padding-bottom: sizeValue($sizeKey, $sizeValue) !important;
		}
	}
}
